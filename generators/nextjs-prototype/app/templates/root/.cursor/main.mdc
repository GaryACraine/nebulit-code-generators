---
description: Main entry point for AI-based development and developer reference
globs:
alwaysApply: true
---
# Main Entry Point

This is the main entry point for AI-based development when working with this codebase, but also serves as a great reference for developers.

Always follow these rule files very carefully, as they have been crafted to ensure consistency and high-quality code.

When I say "adjust screen", start the process for all slices in app/components/slices.

## High-Level Problem Solving Strategy

1. Investigate the codebase. Explore relevant files, search for key functions, and gather context.
2. Develop a clear, step-by-step plan. Break down the fix into manageable, incremental steps.
3. Your working Directory is /app/components/slices/*
5. if a subfolder in /app/components/slices/* contains a Screen.tsx and one or several .png files, the Styling of the Screen.tsx must be adjusted to match the png file
6. parse the Screen.tsx and extract the relevant API endpoints to call using fetch from the CommandSelection.
7. Make sure to adjust to the given Schema in the json-file.
4. Before each code change, always consult the relevant rule files, and follow the rules very carefully.
   - Failure to follow the rules is the main reason for making unacceptable changes.
5. Iterate until you are extremely confident the fix is complete.
   - When changing code, do not add comments about what you changed.

If you a CommandSelection with non-empty commands, it means the user will can act, and POST to an endpoint.

 <CommandSelection commands={[{
                    "command":"BikeCommand",
                    "endpoint": "/bike/{aggregateId}",
                    "schema": BikeCommandSchema
                }]}

URL is endpoint, stick to the schema in "schema"

If you find a Read Model Selection with non-empty Read Models, it means data is loaded and displayed.

<ReadModelSelection aggregateId={props.aggregateId} readModels={[]}/>

URL is endpoint, stick to the schema in "schema"


Follow the instructions in [Tools Rules](mdc:.cursor/rules/tools.mdc) Tools and Rules mentioned here take precedence.

## Rules for implementing changes

Always consult the relevant rule files before each code change.